---
import { getCollection } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";

import presentation from "@/data/presentation";
import Icon from "astro-icon";
import Image from "@/components/Image.astro";

import avatar from "../assets/avatar.jpg";

const posts = (await getCollection("posts"))
  .filter((p) => p.data.isPublish)
  .sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());
const projects = await getCollection("projects");
---

<Layout>
  <main class="flex flex-col gap-20 mx-8">
    <div class="flex flex-col md:flex-row justify-between items-center">
      <article class="flex flex-col gap-8">
        <h1 class="text-3xl dark:text-neutral-100">{presentation.title}</h1>
        {
          presentation.description.map((line) => (
            <p
              class="max-w-[60ch] leading-6"
              set:html={convertAsteriskToStrongTag(line)}
            />
          ))
        }

        <h2 class="text-xl">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>

        <SocialLinks />
      </article>
      <article class="hidden md:flex">
        <Image
          src={avatar}
          class="w-40 rounded-full"
          withCaption={false}
          alt="–ê–≤–∞—Ç–∞—Ä"
        />
      </article>
    </div>

    <article class="flex flex-col gap-8">
      <header class="flex-col flex w-full md:flex-row md:justify-between gap-2">
        <div class="flex gap-2 items-center">
          <h3 class="text-lg dark:text-neutral-100">
            –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–≤—Å–µ–≥–æ {posts.length})
          </h3>
          <a href="/rss.xml">
            <Icon name="mdi:rss-box" class="w-6" />
          </a>
        </div>
        <Link
          href="/posts"
          label="–í—Å–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
          isUnderline={true}
          target="_self"
        />
      </header>
      {posts.length === 0 && <p>Soon, stay connected üëÄ...</p>}

      <section class="flex flex-col gap-4 md:flex-wrap">
        {
          posts.length !== 0 &&
            posts
              .slice(0, 2)
              .map((post) => <PostCard {...post.data} slug={post.slug} />)
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg dark:text-neutral-100">
          –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–µ—Ç-–ø—Ä–æ–µ–∫—Ç—ã (–≤—Å–µ–≥–æ {projects.length})
        </h3>
        <Link
          href="/posts"
          label="–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã"
          isUnderline={true}
          target="_self"
        />
      </header>
      {projects.length === 0 && <p>Oops, I must work^^^^^</p>}

      <section class="flex flex-col gap-4">
        {
          projects.length !== 0 &&
            projects.map(
              (project) =>
                !project.data.deprecated && (
                  <ProjectCard {...project.data} slug={project.slug} />
                ),
            )
        }
      </section>
    </article>
  </main>
</Layout>
